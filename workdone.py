#calculates the rockets total work done#class WDCalc:    def _init__(self):        self.gamma=1.4 #the ratio of specific heat transfer        self.filling_fraction_list=[]#the list of all the times        self.workdone_list=[]#the function of those times        self.P=4*(10**5) #the pressure of the air in the bottle        self.V=2*(10**-3) #the volume of the bottle in litres        self.rho=1#the density of the liquid currently water                        def workdone(self,P,V,gamma,f):        #*10**-3 so as to convert units        w=((P*V*(10**-3))/(-gamma+1))*(((1-f)**gamma)-(1-f))        return(w)        def WDweightratio(self,P,V,gamma,f,rho):         wk=self.workdone(self,P,V,gamma,f)/((f*V*(10**-3)*rho)+0.1)         #the work done per kilo is wk         return wk        def findtotalWDMR(self,P,V,gamma,f,rho):        for i in range(1,1001):             f=i*0.001             x=self.WDweightratio(P,V,gamma,(f),rho)             self.filling_fraction_list.append(f)             self.workdone_list.append(x)             print(x)calc=WDCalc()
